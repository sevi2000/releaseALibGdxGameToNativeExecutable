name: 'releaseALibGdxGameToNativeExecutable'
author: 'sevi2000'
description: 'Create a launcher for any jar app.'
branding:
  icon: 'play'
  color: 'orange'

inputs:
  project-name:
    description: 'Name of your project'
    required: true
  user-name:
    description: 'Name of the GitHub user account'
    required: true
  launcher-jar-version:
    description: 'Version of launcher jar'
    required: true
  GITHUB_TOKEN:
    description: 'GitHub token to add artifacts'
    required: true
  release-url:
    description: 'Release URL for adding assets'
    required: true
  app-version:
    description: 'Version of the app & of the launcher'
    required: true
  JRE_VERSION:
    description: 'JRE version to use'
    required: false
    default: '21.0.1'
  JAVA_VERSION:
    description: 'Java version to use'
    required: false
    default: '21'
  JAVA_DISTRIBUTION:
    description: 'Java distribution to use'
    required: false
    default: 'temurin'

runs:
  using: 'composite'
  steps:
    - name: Java setup
      uses: actions/setup-java@v3
      with:
        distribution: ${{ inputs.JAVA_DISTRIBUTION }}
        java-version: ${{ inputs.JAVA_VERSION }}

    - name: Download scripts
      uses: HydrolienF/usual@0.3.38
      with:
        args: 'download https://github.com/sevi2000/releaseALibGdxGameToNativeExecutable/archive/refs/tags/${{ inputs.launcher-jar-version }}.zip temp.zip'

    - name: Unzip scripts files
      uses: HydrolienF/usual@0.3.38
      with:
        args: 'unzip temp.zip $HOME/work/${{ inputs.project-name }}/${{ inputs.project-name }}/'

    - name: Create launcher as .jar
      shell: bash
      run: |
        rm -f *.{jar,deb}
        chmod +x ./pack_app_to_deb.sh
        ./pack_app_to_deb.sh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        tag_name: v${{ inputs.app-version }}
        release_name: Release v${{ inputs.app-version }}
        body: 'This is the release description'
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.project-name }}.deb
        asset_name: ${{ inputs.project-name }}.deb
        asset_content_type: application/octet-stream
