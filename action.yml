name: releaseALibGdxGameToNativeExecutable
author: "sevi2000"
description: 'Create a launcher for any jar app.'
branding:
  icon: 'play'
  color: 'orange'

on:
  pull_request:
    branches: [master]
    types: [closed]

inputs:
  project-name:
    description: 'Name of your project'
    required: true
  user-name:
    description: 'Name of the GitHub user account'
    required: true
  launcher-jar-version:
    description: 'Version of launcher jar'
    required: true
  GITHUB_TOKEN:
    description: 'GitHub token to add artifacts'
    required: true
  release-url:
    description: 'Release URL for adding assets'
    required: true
  app-version:
    description: 'Version of the app & of the launcher'
    required: true
  JRE_VERSION:
    description: 'JRE version to use'
    required: false
    default: '21.0.1'
  JAVA_VERSION:
    description: 'Java version to use'
    required: false
    default: '21'
  JAVA_DISTRIBUTION:
    description: 'Java distribution to use'
    required: false
    default: 'temurin'

jobs:
  release_job:
    runs-on: ubuntu-latest
    steps:
      - name: Java setup
        uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.JAVA_DISTRIBUTION }}
          java-version: ${{ inputs.JAVA_VERSION }}

      - name: download scripts
        uses: HydrolienF/usual@0.3.38
        with:
          args: 'download https://github.com/sevi2000/releaseALibGdxGameToNativeExecutable/archive/refs/tags/${{ inputs.launcher-jar-version }}.zip temp.zip'
  
      - name: unzip scripts files
        uses: HydrolienF/usual@0.3.38
        with:
          args: 'unzip temp.zip $HOME/work/${{ inputs.project-name }}/${{ inputs.project-name }}/'

      - name: create launcher as .jar
        shell: bash
        run: |
          rm -f *.{jar,deb}
          chmod +x ./pack_app_to_deb.sh
          ./pack_app_to_deb.sh

      - name: release
        shell: bash
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ inputs.user-name }}/${{ inputs.project-name }}/releases \
            -d '{
              "tag_name": "v${{ inputs.app-version }}",
              "target_commitish": "${{ github.ref }}",
              "name": "Release v${{ inputs.app-version }}",
              "body": "This is the release description",
              "draft": false,
              "prerelease": false
            }'

          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @${{ inputs.project-name }}.deb \
            https://uploads.github.com/repos/${{ inputs.user-name }}/${{ inputs.project-name }}/releases/v${{ inputs.app-version }}/assets?name=${{ inputs.project-name }}.deb

