name: Libgdx game to native executable action
description: 'Setup Java environment and build a project to native executable'

inputs:
  distribution:
    description: 'Java distribution (e.g., temurin, zulu, adopt)'
    required: false
    default: 'temurin'
  java-version:
    description: 'Java version to use (e.g., 17, 11)'
    required: false
    default: '17'
  caller-github-token:
    description: 'GitHub token'
    required: true
  platform-specific-exec-file-extention:
    description: 'Executable type (e.g. exe,msi,pkg,dmg,deb,rpm)'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: ${{ inputs.distribution }}
        java-version: ${{ inputs.java-version }}

    - name: Verify Java version
      shell: bash
      run: |
        java -version

    - name: Build project Linux
      if: contains(fromJSON('["deb", "rpm"]'), inputs.platform-specific-exec-file-extention)
      shell: bash
      run: |
        echo "bringing scripts-----------------"
        mv ${{ github.action_path }}/*.sh .
        chmod +x *.sh
        ./pack_app_for_linux.sh
        echo "after trying to generate deb-----"
        ls

    - name: Build project Windows
      if: contains(fromJSON('["exe", "msi"]'), inputs.platform-specific-exec-file-extention)
      shell: pwsh
      run: |
        echo "bringing scripts-----------------"
        mv ${{ github.action_path }}/*.ps1 .
        ./pack_app_for_windows.ps1 -Version "1.0.1" -ProjectName "Test" -Extention ${{ inputs.platform-specific-exec-file-extention }}
        echo "after trying to generate exe and msi-----"
        ls

    - name: Set Release Info
      id: set_release_info
      shell: bash
      run: |
        echo "TAG_NAME=release-$(date +%Y-%m-%d_%H.%M.%S)" >> $GITHUB_OUTPUT
        echo "RELEASE_NAME=release-$(date +%Y-%m-%d_%H.%M.%S)" >> $GITHUB_OUTPUT
        echo "JAR_FILE=$(find . -name '*.jar' | head -n 1)" >> $GITHUB_OUTPUT
        echo "DEB_FILE=$(find . -name '*.deb' | head -n 1)"  >> $GITHUB_OUTPUT
        echo "RPM_FILE=$(find . -name '*.rpm' | head -n 1)"  >> $GITHUB_OUTPUT
        echo "EXE_FILE=$(find . -name '*.exe' | head -n 1)"  >> $GITHUB_OUTPUT
        echo "MSI_FILE=$(find . -name '*.msi' | head -n 1)"  >> $GITHUB_OUTPUT
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ inputs.caller-github-token }}
        tag_name: ${{ steps.set_release_info.outputs.TAG_NAME }}
        name: ${{ steps.set_release_info.outputs.RELEASE_NAME }}
        files: |
          ${{ steps.set_release_info.outputs.JAR_FILE }}
          ${{ steps.set_release_info.outputs.DEB_FILE }}
          ${{ steps.set_release_info.outputs.MSI_FILE }}
          ${{ steps.set_release_info.outputs.EXE_FILE }}
        draft: false
        prerelease: false
