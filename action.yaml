name: Java Setup Workflow
description: 'Setup Java environment and build a project'

inputs:
  distribution:
    description: 'Java distribution (e.g., temurin, zulu, adopt)'
    required: false
    default: 'temurin'
  java-version:
    description: 'Java version to use (e.g., 17, 11)'
    required: false
    default: '17'
  version:
    description: 'Version of the action'
    required: true
  caller-github-token:
    description: 'GitHub token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: ${{ inputs.distribution }}
        java-version: ${{ inputs.java-version }}

    - name: Verify Java version
      shell: bash
      run: java -version

    - name: Download release ZIP assets
      shell: bash
      run: |
        wget https://github.com/sevi2000/releaseALibGdxGameToNativeExecutable/archive/refs/tags/${{inputs.version}}.zip -O code-to-exec.zip
        echo "after downloading sources"
        ls
        echo "end of ls----------------"
    - name: Extract ZIP asset
      shell: bash
      run: |
        echo "uzniping sources-----------------"
        unzip -d code-to-exec code-to-exec.zip
        
    - name: Build project
      shell: bash
      run: |
        echo "bringing scripts-----------------"
        mv code-to-exec/*/*.sh .
        chmod +x *.sh
        ./pack_app_to_deb.sh
        echo "after trying to generate deb-----"
        ls

    - name: Create a release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.caller-github-token }}
        GITHUB_REPO: ${{ github.repository }}
      run: |
        TAG_NAME="release-$(date +%Y-%m-%d_%H.%M.%S)"
        git tag $TAG_NAME
        git push origin $TAG_NAME
        RELEASE_NAME="Release $TAG_NAME"
        JAR_FILE=$(find . -name '*.jar' | head -n 1) # Adjust path as needed
        DEB_FILE=$(find . -name '*.deb' | head -n 1) # Adjust path as needed
        curl -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$GITHUB_REPO/releases \
          -d '{"tag_name":"'$TAG_NAME'","name":"'$RELEASE_NAME'","body":"Automated release with artifacts.","draft":false,"prerelease":false}' > release.json

        RELEASE_ID=$(jq -r '.id' release.json)
        # Upload JAR file
        curl -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/octet-stream" \
        --data-binary @$JAR_FILE \
        "https://uploads.github.com/repos/$GITHUB_REPO/releases/$RELEASE_ID/assets?name=$(basename $JAR_FILE)"

        # Upload DEB file
        curl -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/octet-stream" \
        --data-binary @$DEB_FILE \
        "https://uploads.github.com/repos/$GITHUB_REPO/releases/$RELEASE_ID/assets?name=$(basename $DEB_FILE)"
