name: Libgdx game to native executable action
description: 'Setup Java environment and build a project to native executable'

inputs:
  distribution:
    description: 'Java distribution (e.g., temurin, zulu, adopt)'
    required: false
    default: 'temurin'
  java-version:
    description: 'Java version to use (e.g., 17, 11)'
    required: false
    default: '17'
  version:
    description: 'Version of the action'
    required: true
  caller-github-token:
    description: 'GitHub token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: ${{ inputs.distribution }}
        java-version: ${{ inputs.java-version }}

    - name: Verify Java version
      shell: bash
      run: |
        java -version
        echo "Action path : ${{ github.action_path }}"
        echo "Action path content"
        ls ${{ github.action_path }}
        echo "End of action path content"

    - name: Download release ZIP assets
      shell: bash
      run: |
        wget https://github.com/sevi2000/releaseALibGdxGameToNativeExecutable/archive/refs/tags/${{inputs.version}}.zip -O code-to-exec.zip
        echo "after downloading sources"
        ls
        echo "end of ls----------------"
    - name: Extract ZIP asset
      shell: bash
      run: |
        echo "uzniping sources-----------------"
        unzip -d code-to-exec code-to-exec.zip
        
    - name: Build project
      shell: bash
      run: |
        echo "bringing scripts-----------------"
        mv code-to-exec/*/*.sh .
        chmod +x *.sh
        ./pack_app_to_deb.sh
        echo "after trying to generate deb-----"
        ls
    - name: Set Release Info
      id: set_release_info
      shell: bash
      run: |
        echo "TAG_NAME=release-$(date +%Y-%m-%d_%H.%M.%S)" >> $GITHUB_OUTPUT
        echo "RELEASE_NAME=release-$(date +%Y-%m-%d_%H.%M.%S)" >> $GITHUB_OUTPUT
        echo "JAR_FILE=$(find . -name '*.jar' | head -n 1)" >> $GITHUB_OUTPUT
        echo "DEB_FILE=$(find . -name '*.deb' | head -n 1)"  >> $GITHUB_OUTPUT
        echo "RPM_FILE=$(find . -name '*.rpm' | head -n 1)"  >> $GITHUB_OUTPUT
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ inputs.caller-github-token }}
        tag_name: ${{ steps.set_release_info.outputs.TAG_NAME }}
        name: ${{ steps.set_release_info.outputs.RELEASE_NAME }}
        files: |
          ${{ steps.set_release_info.outputs.JAR_FILE }}
          ${{ steps.set_release_info.outputs.DEB_FILE }}
          ${{ steps.set_release_info.outputs.RPM_FILE }}
        draft: false
        prerelease: false
